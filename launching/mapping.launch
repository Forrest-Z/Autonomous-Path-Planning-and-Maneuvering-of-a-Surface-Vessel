<launch>
<!-- --> <param name="use_sim_time" value="true" /> 

  <node pkg="rosbag" type="play" name="player" output="screen" args="--clock /home/revolt/dock.bag"/>


    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
      <remap from="cloud_in" to="/velodyne_points"/>
      <remap from="scan" to="/laser_scan" />
      <rosparam>
        target_frame: velodyne
        transform_tolerance: 0.01
        min_height: 0.0
        max_height: 3.0
        
        angle_min: -3.14159265359
        angle_max: 3.14159265359
        angle_increment: 0.00349
        scan_time: 0.1
        range_min: 2
        range_max: 100
        use_inf: true
        
        #concurrency_level affects number of pc queued for processing and the number of threadsused
        # 0: Detect number of cores
        # 1: Single threaded
        # 2: inf : Parallelism level
        concurrency_level: 1
      </rosparam>
    </node>

	<!--   Rviz -->
<node type="rviz" name="rviz" pkg="rviz" args="-d $(find launching)/cfg/rviz/mapping.rviz" output="screen" />


  	<!-- transform -->
<node name="transform" pkg="transform" type="transform_node" respawn="true" output="screen"/>

<node pkg="tf" type="static_transform_publisher" name="tf1" args="1.28 0 0.4 0 0 0 /base_link /velodyne 100" />

<node pkg="tf" type="static_transform_publisher" name="tf2" args="0 0 0 0 0 0 /odom /base_link 100" />



<node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">

    <param name="odom_frame" value="odom"/>
    <param name="base_frame" value="base_link"/>
    <param name="map_frame" value="map"/>

    <!-- Process 1 out of every this many scans (set it to a higher number to skip more scans)  -->
    <param name="throttle_scans" value="1"/>

    <param name="map_update_interval" value="5.0"/> <!-- default: 5.0 -->

    <!-- The maximum usable range of the laser. A beam is cropped to this value.  -->
    <param name="maxUrange" value="20.0"/>

    <!-- The maximum range of the sensor. If regions with no obstacles within the range of the sensor should appear as free space in the map, set maxUrange < maximum range of the real sensor <= maxRange -->
    <param name="maxRange" value="100.0"/>

    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="minimumScore" value="300.0"/>
    <!-- Number of beams to skip in each scan. -->
    <param name="lskip" value="0"/>

    <param name="srr" value="0.01"/>
    <param name="srt" value="0.02"/>
    <param name="str" value="0.01"/>
    <param name="stt" value="0.02"/>

    <!-- Process a scan each time the robot translates this far  -->
    <param name="linearUpdate" value="0.1"/>

    <!-- Process a scan each time the robot rotates this far  -->
    <param name="angularUpdate" value="0.0"/>

    <param name="temporalUpdate" value="-1.0"/>
    <param name="resampleThreshold" value="0.5"/>

    <!-- Number of particles in the filter. default 30        -->
    <param name="particles" value="10"/>

<!-- Initial map size  -->
    <param name="xmin" value="-10.0"/>
    <param name="ymin" value="-10.0"/>
    <param name="xmax" value="10.0"/>
    <param name="ymax" value="10.0"/>

    <!-- Processing parameters (resolution of the map)  -->
    <param name="delta" value="0.4"/>

    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>

  </node>

  <!--   <remap from="scan" to="laser_scan"/>          Run the map server -->
  <!--<node name="map_server" pkg="map_server" type="map_server" args="$(find mapping)/map2.yaml" />-->


</launch>
